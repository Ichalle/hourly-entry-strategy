//@version=5
strategy("Time-Based Entry with TP/SL", overlay=true, margin_long=100, margin_short=100)

// User Inputs
entryHour    = input.int(14,    "Entry Hour (24-hour format)", minval=0, maxval=23)
testDays     = input.int(50,    "Backtest Period (Days)", minval=1)
tpPercent    = input.float(2.0, "Take Profit (%)", minval=0.1, maxval=100, step=0.1)
slPercent    = input.float(1.5, "Stop Loss (%)", minval=0.1, maxval=100, step=0.1)

// Variables
var float takeProfitPrice = na
var float stopLossPrice = na

// Time Calculations
testStartTime = timestamp(year, month, dayofmonth, 00, 00) - (testDays * 86400000)
withinTestPeriod = time >= testStartTime
isEntryHour = hour == entryHour and minute == 0

// Entry Condition
enterLong = withinTestPeriod and isEntryHour and strategy.position_size == 0

// Trade Execution
if enterLong
    strategy.entry("Long", strategy.long)
    takeProfitPrice := close * (1 + tpPercent / 100)
    stopLossPrice := close * (1 - slPercent / 100)
    
if strategy.position_size > 0
    strategy.exit("TP/SL", "Long", limit=takeProfitPrice, stop=stopLossPrice)

// Visuals
plotshape(enterLong, style=shape.triangleup, location=location.belowbar, color=color.green, size=size.small)
plot(strategy.position_size > 0 ? takeProfitPrice : na, "TP", color.green, 2, plot.style_linebr)
plot(strategy.position_size > 0 ? stopLossPrice : na, "SL", color.red, 2, plot.style_linebr)

// Summary Table
var table summary = table.new(position.top_right, 2, 4, border_width=1)
if barstate.islast
    table.cell(summary, 0, 0, "Strategy Parameters", bgcolor=color.yellow)
    table.cell(summary, 0, 1, "Entry Time", bgcolor=color.gray)
    table.cell(summary, 0, 2, "Take Profit", bgcolor=color.gray)
    table.cell(summary, 0, 3, "Stop Loss", bgcolor=color.gray)
    table.cell(summary, 1, 1, str.tostring(entryHour)+":00", bgcolor=color.gray)
    table.cell(summary, 1, 2, str.tostring(tpPercent)+"%", bgcolor=color.gray)
    table.cell(summary, 1, 3, str.tostring(slPercent)+"%", bgcolor=color.gray)